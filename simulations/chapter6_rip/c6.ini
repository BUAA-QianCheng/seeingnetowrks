[General]
*.visualizer.numRoutingTableVisualizers = 2
*.visualizer.routingTableVisualizer[*].displayRoutingTables = true
*.visualizer.routingTableVisualizer[*].nodeFilter = "router* or host*"
*.visualizer.routingTableVisualizer[*].labelFormat = "%d/%m (%e) -> %g (%n)"

*.visualizer.routingTableVisualizer[0].destinationFilter = "host1"
*.visualizer.routingTableVisualizer[0].lineColor = "red"
*.visualizer.routingTableVisualizer[1].destinationFilter = "host2"
*.visualizer.routingTableVisualizer[1].lineColor = "blue"

*.visualizer.interfaceTableVisualizer[0].displayInterfaceTables = true
*.visualizer.interfaceTableVisualizer[0].nodeFilter = "not switch"

*.configurator.config = xml("<config> \
                                <interface hosts='**' address='10.x.x.x' netmask='255.x.x.x'/> \
                                <autoroute sourceHosts='host*'/> \
                             </config>")

*.configurator.addDirectRoutes = false

*.host1.numApps = 1
*.host1.app[0].typename = "PingApp"
*.host1.app[0].destAddr = "host2"
*.host1.app[0].startTime = 150s
*.host1.app[0].sendInterval = 15s

*.*.ipv4.arp.typename = "GlobalArp"
*.router*.hasRip = true
*.router*.rip.startupTime = uniform(0s,1s)
*.router*.rip.updateInterval = 30s

**.crcMode = "computed"
**.fcsMode = "computed"

[Config RipBasic]
network = RouterNetwork
description = "RIP Basics"

*.router*.rip.ripConfig = xml("<config><interface hosts='router*' mode='NoSplitHorizon'/></config>")
*.router*.rip.triggeredUpdate = false

*.router1.numPcapRecorders = 1
*.router1.pcapRecorder[*].pcapFile = "results/RipBasic_Router1.pcap"

[Config InfinityProblem]
network = RouterNetworkExt
description = "Count To Infinity Problem"

*.router*.rip.ripConfig = xml("<config> \
							       <interface hosts='router*' mode='NoSplitHorizon'/>\
							   </config>")
*.router*.rip.triggeredUpdate = false
**.scenarioManager.script = xml("<scenario>\
        						     <disconnect t='100s' src-module='router6' dest-module='host2'/>\
        						</scenario>")

[Config SplitHorizon]
extends = InfinityProblem
description = "Split Horizon"
*.router*.rip.ripConfig = xml("<config> \
							       <interface hosts='router*' mode='SplitHorizon'/>\
							   </config>")

[Config SplitHorizonWithPoisonReverse]
extends = InfinityProblem
description = "Split Horizon with Poison Reverse"
*.router*.rip.ripConfig = xml("<config> \
							       <interface hosts='router*' mode='SplitHorizonPoisonedReverse'/>\
							   </config>")

[Config TriggerUpdate]
extends = InfinityProblem
description = "Trigger Update"
*.router*.rip.triggeredUpdate = true

[Config FullRip]
extends = InfinityProblem
description = "Full RIP Function"
*.router*.rip.triggeredUpdate = true
*.router*.rip.ripConfig = xml("<config> \
							       <interface hosts='router*' mode='SplitHorizonPoisonedReverse'/>\
							   </config>")
